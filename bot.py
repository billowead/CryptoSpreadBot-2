import requests
import threading
import time
from flask import Flask, request
from telegram import Bot

# –¢–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ:
TELEGRAM_TOKEN = '7829142639:AAHNhPm0H1L4RTxNWXltrJ_xUZYozGZ6-jY'
CHAT_ID = 593059857

bot = Bot(token=TELEGRAM_TOKEN)
app = Flask(__name__)

def get_binance_price(symbol='BTCUSDT'):
    try:
        url = f'https://api.binance.com/api/v3/ticker/price?symbol={symbol}'
        response = requests.get(url, timeout=5)
        response.raise_for_status()
        price = float(response.json()['price'])
        print(f"Binance {symbol} price: {price}")
        return price
    except Exception as e:
        print(f"Binance API error: {e}")
        return None

def get_bybit_price(symbol='BTCUSDT'):
    try:
        url = f'https://api.bybit.com/v2/public/tickers?symbol={symbol}'
        response = requests.get(url, timeout=5)
        response.raise_for_status()
        data = response.json()
        price = float(data['result'][0]['last_price'])
        print(f"Bybit {symbol} price: {price}")
        return price
    except Exception as e:
        print(f"Bybit API error: {e}")
        return None

def check_spread():
    THRESHOLD = 0.001  # 0.1%
    symbol = 'BTCUSDT'

    print("‚ñ∂Ô∏è –ó–∞–ø—É—â–µ–Ω —Ñ–æ–Ω–æ–≤—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–ø—Ä–µ–¥–æ–≤...")
    while True:
        try:
            print("–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–µ–Ω—ã...")
            price_binance = get_binance_price(symbol)
            price_bybit = get_bybit_price(symbol)

            if price_binance is None or price_bybit is None:
                print("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª.")
                time.sleep(15)
                continue

            spread = abs(price_binance - price_bybit) / ((price_binance + price_bybit) / 2)
            spread_percent = spread * 100

            print(f"–¢–µ–∫—É—â–∏–π —Å–ø—Ä–µ–¥: {spread_percent:.4f}%")

            if spread >= THRESHOLD:
                msg = (
                    f"üö® –°–ü–†–ï–î! {symbol}:\n"
                    f"{spread_percent:.2f}% –º–µ–∂–¥—É "
                    f"<a href='https://www.binance.com/en/trade/{symbol}'>Binance</a> –∏ "
                    f"<a href='https://www.bybit.com/trade/{symbol}'>Bybit</a>\n"
                    f"–¶–µ–Ω—ã:\nBinance: {price_binance}\nBybit: {price_bybit}"
                )
                print("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram")
                bot.send_message(chat_id=CHAT_ID, text=msg, parse_mode='HTML')

            time.sleep(15)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ check_spread: {e}")
            time.sleep(15)

@app.route('/webhook', methods=['POST'])
def webhook():
    update = request.get_json()
    print("–ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:", update)

    if 'message' in update and 'text' in update['message']:
        chat_id = update['message']['chat']['id']
        text = update['message']['text']

        if text == '/start':
            bot.send_message(chat_id=chat_id, text="–ü—Ä–∏–≤–µ—Ç! –Ø –º–æ–Ω–∏—Ç–æ—Ä—é —Å–ø—Ä–µ–¥—ã –º–µ–∂–¥—É –±–∏—Ä–∂–∞–º–∏. –ö–∞–∫ —Ç–æ–ª—å–∫–æ —Å–ø—Ä–µ–¥ –±—É–¥–µ—Ç –≤—ã—à–µ –ø–æ—Ä–æ–≥–∞, —è –ø—Ä–∏—à–ª—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.")
    return 'ok'

def run_flask():
    app.run(host='0.0.0.0', port=10000)

if __name__ == '__main__':
    threading.Thread(target=run_flask).start()
    threading.Thread(target=check_spread).start()
