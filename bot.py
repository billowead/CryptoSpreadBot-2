import os
import asyncio
import random
from telegram import Bot
from aiohttp import web

TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
CHAT_ID = os.getenv('CHAT_ID')

bot = Bot(token=TELEGRAM_TOKEN)

# –ü—Ä–∏–º–µ—Ä—ã –±–∏—Ä–∂ (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –ø–æ–∑–∂–µ)
EXCHANGES = {
    "binance": "https://www.binance.com/en/trade/{}_{}",
    "bybit": "https://www.bybit.com/trade/spot/{}-{}"
}

# –í–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
PAIRS = [
    ("BTC", "USDT"),
    ("ETH", "USDT"),
    ("DOGE", "USDT"),
    ("LTC", "USDT"),
    ("BTC", "DOGE"),
    ("ETH", "DOGE"),
    ("LTC", "BTC"),
    ("DOGE", "ETH")
]

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø—Ä–µ–¥–∞ (–∑–∞–≥–ª—É—à–∫–∞, –ø–æ–∑–∂–µ –ø–æ–¥–∫–ª—é—á–∏–º API)
async def check_spread(base, quote):
    spread = random.uniform(0, 5)
    return spread

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
async def main_loop():
    while True:
        for base, quote in PAIRS:
            spread = await check_spread(base, quote)
            if spread > 2:
                message = (
                    f"üìä –°–ø—Ä–µ–¥ –º–µ–∂–¥—É {base}/{quote} = {spread:.2f}%\n\n"
                    f"üîó Binance: {EXCHANGES['binance'].format(base, quote)}\n"
                    f"üîó Bybit: {EXCHANGES['bybit'].format(base, quote)}"
                )
                try:
                    await bot.send_message(chat_id=CHAT_ID, text=message)
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
        await asyncio.sleep(60)

# HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è Render (—á—Ç–æ–±—ã –Ω–µ —Ä—É–≥–∞–ª—Å—è –Ω–∞ –ø–æ—Ä—Ç—ã)
async def handle(request):
    return web.Response(text="CryptoSpreadBot —Ä–∞–±–æ—Ç–∞–µ—Ç")

def run():
    loop = asyncio.get_event_loop()
    loop.create_task(main_loop())

    app = web.Application()
    app.router.add_get("/", handle)
    web.run_app(app, port=10000)

if __name__ == "__main__":
    run()
