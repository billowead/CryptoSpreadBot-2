import logging
import asyncio
from telegram import Bot, Update
from telegram.ext import Application, CommandHandler, ContextTypes
import httpx
from telegram.constants import ParseMode

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TOKEN = "7829142639:AAHNhPm0H1L4RTxNWXltrJ_xUZYozGZ6-jY"
CHAT_ID = "593059857"

# –°–æ–∑–¥–∞–µ–º Application
app = Application.builder().token(TOKEN).build()

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await update.message.reply_text(
        "üîÑ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!\n"
        "–Ø –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–ø—Ä–µ–¥–∞—Ö –º–µ–∂–¥—É –±–∏—Ä–∂–∞–º–∏.\n"
        "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ–π—á–∞—Å: /check"
    )

async def check_prices(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–Ω –ø–æ –∫–æ–º–∞–Ω–¥–µ /check"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—ã BTC-USDT —Å KuCoin –∏ MEXC
        async with httpx.AsyncClient() as client:
            # KuCoin
            kucoin_resp = await client.get(
                "https://api.kucoin.com/api/v1/market/orderbook/level1",
                params={"symbol": "BTC-USDT"},
                timeout=10
            )
            kucoin_price = float(kucoin_resp.json()["data"]["price"])
            
            # MEXC
            mexc_resp = await client.get(
                "https://api.mexc.com/api/v3/ticker/price",
                params={"symbol": "BTCUSDT"},
                timeout=10
            )
            mexc_price = float(mexc_resp.json()["price"])
            
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–ø—Ä–µ–¥
        spread = abs(kucoin_price - mexc_price)
        spread_percent = (spread / ((kucoin_price + mexc_price)/2)) * 100
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        message = (
            f"üìä BTC-USDT:\n"
            f"KuCoin: {kucoin_price:.2f}\n"
            f"MEXC: {mexc_price:.2f}\n"
            f"–°–ø—Ä–µ–¥: {spread_percent:.2f}%"
        )
        
        await update.message.reply_text(message, parse_mode=ParseMode.MARKDOWN)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {str(e)}")
        await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö")

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("check", check_prices))

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    logger.info("Starting bot...")
    app.run_polling()

if __name__ == "__main__":
    main()
