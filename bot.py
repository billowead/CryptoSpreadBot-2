import threading
import time
import requests
from flask import Flask, request
from telegram import Bot, Update
from telegram.ext import Dispatcher, CommandHandler, MessageHandler, Filters

TOKEN = '7829142639:AAHNhPm0H1L4RTxNWXltrJ_xUZYozGZ6-jY'
CHAT_ID = 593059857
SPREAD_THRESHOLD = 0.01  # –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ä–æ–≥ –¥–ª—è —Ç–µ—Å—Ç–∞

bot = Bot(token=TOKEN)
app = Flask(__name__)

def get_prices():
    # –ü—Ä–∏–º–µ—Ä –¥–≤—É—Ö –±–∏—Ä–∂ Binance –∏ Bybit –¥–ª—è –ø–∞—Ä—ã BTCUSDT
    try:
        r1 = requests.get('https://api.binance.com/api/v3/ticker/price?symbol=BTCUSDT', timeout=5)
        r2 = requests.get('https://api.bybit.com/v2/public/tickers?symbol=BTCUSDT', timeout=5)
        if r1.status_code == 200 and r2.status_code == 200:
            price_binance = float(r1.json()['price'])
            price_bybit = float(r2.json()['result'][0]['last_price'])
            return price_binance, price_bybit
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ü–µ–Ω: {e}")
    return None, None

def monitor_spreads():
    print("‚ñ∂Ô∏è –ó–∞–ø—É—â–µ–Ω —Ñ–æ–Ω–æ–≤—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–ø—Ä–µ–¥–æ–≤...")
    while True:
        price_binance, price_bybit = get_prices()
        if price_binance and price_bybit:
            spread = abs(price_binance - price_bybit) / ((price_binance + price_bybit) / 2) * 100
            if spread >= SPREAD_THRESHOLD:
                message = (
                    f"üö® –°–ü–†–ï–î! BTC/USDT: {spread:.2f}% –º–µ–∂–¥—É "
                    f"[Binance](https://www.binance.com/en/trade/BTC_USDT) –∏ "
                    f"[Bybit](https://www.bybit.com/trade-spot/BTCUSDT)"
                )
                bot.send_message(chat_id=CHAT_ID, text=message, parse_mode='Markdown')
        time.sleep(10)

@app.route('/webhook', methods=['POST'])
def webhook():
    update = Update.de_json(request.get_json(force=True), bot)
    dispatcher.process_update(update)
    return 'ok'

def start(update, context):
    update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –º–æ–Ω–∏—Ç–æ—Ä—é —Å–ø—Ä–µ–¥—ã –º–µ–∂–¥—É –±–∏—Ä–∂–∞–º–∏. –ö–∞–∫ —Ç–æ–ª—å–∫–æ —Å–ø—Ä–µ–¥ –±—É–¥–µ—Ç –≤—ã—à–µ –ø–æ—Ä–æ–≥–∞, —è –ø—Ä–∏—à–ª—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ."
    )

def test(update, context):
    update.message.reply_text(
        "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: —Å–ø—Ä–µ–¥ 0.05% –º–µ–∂–¥—É Binance –∏ Bybit.\n"
        "[Binance](https://www.binance.com/en/trade/BTC_USDT) vs "
        "[Bybit](https://www.bybit.com/trade-spot/BTCUSDT)",
        parse_mode='Markdown'
    )

dispatcher = Dispatcher(bot, None, workers=0)
dispatcher.add_handler(CommandHandler('start', start))
dispatcher.add_handler(CommandHandler('test', test))

if __name__ == '__main__':
    threading.Thread(target=monitor_spreads, daemon=True).start()
    app.run(host='0.0.0.0', port=10000)
